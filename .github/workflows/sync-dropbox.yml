name: Sync Files from Dropbox

on:
  schedule:
    - cron: '0 6 * * *'   # daily at 06:00 UTC (~08:00 Rome)
  workflow_dispatch:

permissions:
  contents: read   # we push with PAT, not GITHUB_TOKEN

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository (with PAT on main)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
          token: ${{ secrets.PAT }}   # ensure pushes are allowed

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y rclone qpdf file

      - name: Define Dropbox source path
        run: echo "SRC_PATH=Website/Documents" >> "$GITHUB_ENV"

      - name: Sync from Dropbox
        env:
          RCLONE_DROPBOX_TOKEN: ${{ secrets.DROPBOX_TOKEN_JSON }}
          RCLONE_DROPBOX_CLIENT_ID: ${{ secrets.DROPBOX_CLIENT_ID }}
          RCLONE_DROPBOX_CLIENT_SECRET: ${{ secrets.DROPBOX_CLIENT_SECRET }}
        run: |
          rclone sync ":dropbox:${SRC_PATH}" "./docs" --fast-list -vv

      - name: Ensure .gitattributes for PDFs
        run: |
          {
            echo "*.pdf binary"
            echo "*.PDF binary"
          } > .gitattributes

      - name: Normalise and verify PDFs
        run: |
          shopt -s nullglob globstar
          for f in docs/**/*.pdf docs/*.pdf docs/**/*.PDF docs/*.PDF; do
            qpdf --linearize "$f" "$f.qpdf" && mv -f "$f.qpdf" "$f"
            sig=$(hexdump -n 5 -v -e '/1 "%02X"' "$f" || true)
            mime=$(file -b --mime-type "$f" || true)
            echo "$f  sig=$sig  mime=$mime"
            if [ "$sig" != "255044462D" ] || [ "$mime" != "application/pdf" ]; then
              echo "::error::$f is not detected as a proper PDF"
              exit 1
            fi
          done

      - name: Show git status (debug)
        run: git status --porcelain=v1

      - name: Commit and push changes (use PAT, push to main)
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          token: ${{ secrets.PAT }}                 # <â€” force push with PAT
          branch: main
          commit_message: 'Docs: Auto-sync from Dropbox'
          commit_user_name: 'GitHub Actions Bot'
          commit_user_email: 'actions@github.com'
          file_pattern: |
            .gitattributes
            docs
          add_options: '--all'

      # Verify it's really on origin/main (remote)
      - name: Verify CV on remote
        run: |
          git fetch origin main --depth=1
          git cat-file -e origin/main:docs/CV/KimTaveras_CV.pdf || (echo "::error::CV not on remote main"; exit 1)
          echo "OK: CV present on origin/main"
          git log -1 --stat -- docs/CV/KimTaveras_CV.pdf
